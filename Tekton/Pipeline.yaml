apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: build-and-deploy-jpet
spec:
  workspaces:
    - name: workspace
      persistentVolumeClaim: 
        claimName: workspace   
  params:
  - name: git-url
    type: string
    description: url of the git repo for the code of deployment
    default: "https://github.com/jmlafont/jpetstore-kubernetes.git"
  - name: git-revision
    type: string
    description: revision to be used from repo of the code for deployment
    default: "master"
  - name: app-image
    type: string
    description: web app image repository
    default: "quay.io/jmlafont/jpetstore-web"
  - name: db-image
    type: string
    description: db image repository
    default: "quay.io/jmlafont/jpetstore-db"
  - name: registry-password
    description: password to push images 
  - name: registry-username
    description: username to push images 
    default: jmlafont
    
  tasks:
  - name: clone-repository
    taskRef:
      name: git-clone
      kind: ClusterTask
    workspaces:
    - name: output
      workspace: workspace
    params:
    - name: url
      value: $(params.git-url)
    - name: deleteExisting
      value: "true"
    - name: revision
      value: $(params.git-revision)

  - name: build-jpet-web
    taskRef:
      name: buildah
      kind: ClusterTask
    workspaces:
      - name: source
        workspace: workspace
    params:
      - name: DOCKERFILE 
        value: './jpetstore/Dockerfile'
      - name: TLSVERIFY
        value: "false"
      - name: IMAGE
        value: $(params.app-image)
      - name: CONTEXT
        value: jpetstore
      - name: PUSH_EXTRA_ARGS
        value: "--creds $(params.registry-username):$(params.registry-password)"
    runafter:
      - clone-repository

  - name: build-jpet-db
    taskRef:
      name: buildah
      kind: ClusterTask
    workspaces:
      - name: source
        workspace: workspace
    params:
      - name: DOCKERFILE 
        value: './jpetstore/db/Dockerfile'
      - name: TLSVERIFY
        value: "false"
      - name: IMAGE
        value: $(params.db-image)
      - name: CONTEXT
        value: jpetstore/db
      - name: PUSH_EXTRA_ARGS
        value: "--creds $(params.registry-username):$(params.registry-password)"
    runafter:
      - clone-repository

  - name: deploy-jpet
    taskRef:
      name: deploy-jpet
    workspaces:
      - name: source
        workspace: workspace
    runafter:
      - build-jpet-web



---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: deploy-jpet
spec:
  workspaces:
    - name: source  
  steps:
    - name: deploy
      image: quay.io/openshift/origin-cli:latest
      workingDir: /workspace/source/YAML
      command: ["/bin/bash", "-c"]
      args:
        - |-
          echo "**** Deploy manifest ****"
          oc apply -f jpetstore.yaml

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: workspace
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: rook-ceph-cephfs-internal

